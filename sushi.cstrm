â
mappools_created$
Sushi.PoolCreatedArray
PoolsArray*MK
mappA
?"=
Pools
token0*
ptoken0
token1*
ptoken1
-
Pools
token0address
token1address"Ω[{"type":"event","name":"PoolCreated","inputs":[{"type":"address","name":"token0","indexed":true},{"type":"address","name":"token1","indexed":true},{"type":"uint24","name":"fee","indexed":true},{"type":"int24","name":"tickSpacing","indexed":false},{"type":"address","name":"pool","indexed":false}],"anonymous":false}]BPoolsBSushi.PoolCreated*£syntax = "proto3";

package sushiswapTest.Sushi;

message PoolCreated{
string token0 = 1;
string token1 = 2;
string fee = 3;
string tickSpacing = 4;
string pool = 5;
}

message Events {
repeated PoolCreated pool_created = 1;
}



message PoolCreatedArray{
repeated PoolCreated values = 1;
}
*ùsyntax = "proto3";

package sushiswapTest.structs;

message Pools{
string token0 = 1;
string token1 = 2;
}

message PoolsArray{
repeated Pools values = 1;
}
ø
SushiΩ[{"type":"event","name":"PoolCreated","inputs":[{"type":"address","name":"token0","indexed":true},{"type":"address","name":"token1","indexed":true},{"type":"uint24","name":"fee","indexed":true},{"type":"int24","name":"tickSpacing","indexed":false},{"type":"address","name":"pool","indexed":false}],"anonymous":false}]v
eventPoolCreated
addresstoken0
addresstoken1
uint24fee
int24tickSpacing
addresspoolJ
sushiswapTest