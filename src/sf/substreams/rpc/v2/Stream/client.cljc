;;;----------------------------------------------------------------------------------
;;; Generated by protoc-gen-clojure.  DO NOT EDIT
;;;
;;; GRPC sf.substreams.rpc.v2.Stream Client Implementation
;;;----------------------------------------------------------------------------------
(ns sf.substreams.rpc.v2.Stream.client
  (:require [sf.substreams.rpc.v2 :refer :all]
            [sf.substreams.v1 :as sf.substreams.v1]
            [com.google.protobuf :as com.google.protobuf]
            [clojure.core.async :as async]
            [protojure.grpc.client.utils :refer [send-unary-params invoke-unary]]
            [promesa.core :as p]
            [protojure.grpc.client.api :as grpc]))

;-----------------------------------------------------------------------------
; GRPC Client Implementation
;-----------------------------------------------------------------------------

(def Stream-service-name "sf.substreams.rpc.v2.Stream")

(defn Blocks
  ([client params reply] (Blocks client {} params reply))
  ([client metadata params reply]
  (let [input (async/chan 1)
        desc {:service "sf.substreams.rpc.v2.Stream"
              :method  "Blocks"
              :input   {:f sf.substreams.rpc.v2/new-Request :ch input}
              :output  {:f sf.substreams.rpc.v2/pb->Response :ch reply}
              :metadata metadata}]
    (-> (send-unary-params input params)
        (p/then (fn [_] (grpc/invoke client desc)))))))

