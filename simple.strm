event Transfer(address indexed from, address to, uint256 tokenId);
event Approval(address indexed from, address to, uint256 tokenId);

map transfers:
(Block) -> Transfer[] {
    (block) => events(block, Transfer);
}

map transfers_from_bayc_address:
(Block) -> Transfer[] {
    (block) => block.logs;
    filter (log) => log.address == BAYC_ADDRESS;
    filter (log) => Transfer.matches(log);
    map (log) => Transfer.decode(log);
}

map approvals:
(Block) -> Approval[] {
    (block) => events(block, Transfer);
}

store transfers:
(Transfer[]) -> Set(Transfer) {
   (transfer) => {
      set(transfer.tokenId, transfer);
   }
}
