syntax = "proto3";

package spyglass.streamline.alpha.ast;

message StreamlineFile {
    repeated TypeDeclaration types = 1;
    repeated ModuleDef modules = 2;
}

message TypeDeclaration {
    string name = 1;
    repeated TypeField fields = 2;
}

message TypeField {
    string field_name = 1;
    string field_type = 2;
}

message ModuleDef {
    string kind = 1;
    string identifier = 2;
    ModuleSignature signature = 3;
    repeated Function pipeline = 5;
}

message Function {
    oneof function {
        Lambda lambda = 1;
        Hof hof = 2;
    }
}

message ModuleSignature {
    repeated string  inputs = 1;
    string output = 2;
}

message Lambda {
    repeated string inputs = 1;
    string body = 2; // TODO Make this a proper list of expressions
}

message Hof {
    string parent = 1;
    Lambda callback = 2;
}

message Expression {
    oneof expression {
        Literal literal = 1;
        string identifier = 2;
        FunctionCall function_call = 3;
        BinaryOp binary_op = 4;
        FieldAccess field_access = 5;
    }
}

message Literal {
    oneof literal {
        int64 int = 1;
        double float = 2;
        string string = 3;
        bool bool = 4;
    }
}

message FunctionCall {
    string identifier = 1;
    repeated Expression arguments = 2;
}

message BinaryOp {
    string op = 1;
    Expression lhs = 2;
    Expression rhs = 3;
}

message FieldAccess {
    Expression target = 1;
    string field = 2;
}
